{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/menu/friend/friend.component.css","webpack:///./src/app/menu/friend/friend.component.html","webpack:///./src/app/menu/friend/friend.component.ts","webpack:///./src/app/menu/menu.module.ts","webpack:///./src/app/menu/multi-user/multi-user.component.css","webpack:///./src/app/menu/multi-user/multi-user.component.html","webpack:///./src/app/menu/multi-user/multi-user.component.ts","webpack:///./src/app/menu/todohome/todohome.component.css","webpack:///./src/app/menu/todohome/todohome.component.html","webpack:///./src/app/menu/todohome/todohome.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/socket2.service.ts","webpack:///./src/app/user-management/delete-account/delete-account.component.css","webpack:///./src/app/user-management/delete-account/delete-account.component.html","webpack:///./src/app/user-management/delete-account/delete-account.component.ts","webpack:///./src/app/user-management/forgot-password/forgot-password.component.css","webpack:///./src/app/user-management/forgot-password/forgot-password.component.html","webpack:///./src/app/user-management/forgot-password/forgot-password.component.ts","webpack:///./src/app/user-management/login/login.component.css","webpack:///./src/app/user-management/login/login.component.html","webpack:///./src/app/user-management/login/login.component.ts","webpack:///./src/app/user-management/sign-up/sign-up.component.css","webpack:///./src/app/user-management/sign-up/sign-up.component.html","webpack:///./src/app/user-management/sign-up/sign-up.component.ts","webpack:///./src/app/user-management/user-management.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserManagementModule } from './user-management/user-management.module';\nimport { MenuModule } from './menu/menu.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './user-management/login/login.component';\nimport { AppService } from './app.service';\nimport { HttpService } from './http.service';\nimport { SocketService } from './socket.service';\nimport { Socket2Service } from './socket2.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forRoot([\n\n      { path: 'login', component: LoginComponent },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: '*', component: LoginComponent }\n    ]),\n    UserManagementModule,\n    HttpClientModule,\n    MenuModule\n  ],\n  providers: [AppService, HttpService, SocketService, Socket2Service],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpParams} from '@angular/common/http';\nimport  {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AppService {\n  public baseUrl = 'http://backend.solitarydev.online/api/v1.0'\n  constructor(public http:HttpClient) {}\n\n  //SIGN-UP Function:\n\n  public signupFunction(data):Observable<any>{\n    const params = new HttpParams()\n    .set('email',data.email)\n    .set('textPassword',data.textPassword)\n    .set('firstName',data.firstName)\n    .set('lastName',data.lastName)\n    .set('mobileNumber',data.mobileNumber)\n    .set('countryCode',data.countryCode)\n    return this.http.post(`${this.baseUrl}/signup`,params);\n  }\n\n//LOG-IN Function:\n\npublic loginFunction(data):Observable<any>{\n  const params = new HttpParams()\n  .set('email',data.email)\n  .set('textPassword',data.textPassword)\n  return this.http.post(`${this.baseUrl}/login`,params);\n}\n\n//Forgot Password:\npublic forgotPassword(email):Observable<any>{\n  const params = new HttpParams()\n  .set('email',email)\n  return this.http.post(`${this.baseUrl}/restore`,params);\n}\n\n//Delete Account\npublic removeAccount=(userID)=>{\n  return this.http.delete(`${this.baseUrl}/deleteuser/${userID}`);\n}\n\n}//end AppService Class\n\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  public baseURL = \"http://backend.solitarydev.online/api/v1.0\";\n  public deleteid: String;\n  public deletetask: String;\n  constructor(public http: HttpClient) { }\n\n  //Creating a new Todo List:\n  public createTodo = (data) => {\n    const params = new HttpParams()\n      .set(\"name\", data.name)\n      .set(\"description\", data.description)\n      .set(\"createdBy\", data.createdBy)\n    return this.http.post(`${this.baseURL}/create`, params)\n  }\n\n  //Getting All Todo List:\n  public getAlltodo = () => {\n    return this.http.get(`${this.baseURL}/alltodo`);\n  }\n\n  //Removing  todo List:\n  public removetodolist = (id) => {\n    this.deleteid = id;\n    return this.http.delete(`${this.baseURL}/delete/${this.deleteid}`);\n  }\n\n  //Get Tasks\n  public getTasks = () => {\n    return this.http.get(`${this.baseURL}/alltask`);\n  }\n\n  //Create A New Task:\n  public createnewtask = (data) => {\n    const params = new HttpParams()\n      .set(\"listid\", data.listid)\n      .set(\"taskName\", data.taskName)\n    return this.http.post(`${this.baseURL}/createtask`, params);\n  }\n\n\n  //Delete A single task:\n  public deletesingletask = (id) => {\n    this.deletetask = id;\n    return this.http.delete(`${this.baseURL}/deletetask/${this.deletetask}`);\n  }\n\n  //Delete Many Task:\n  public deleteMany = (id) => {\n    return this.http.delete(`${this.baseURL}/deletemany/${id}`);\n  }\n\n  //Get All Users:\n  public getAllpeople = () => {\n    return this.http.get(`${this.baseURL}/all`)\n  }\n}","module.exports = \".aside{\\n    margin-top:3%;\\n    background-color:#f5f5f5;\\n    height:100vh;\\n    overflow:auto;\\n}\\n\\n.user{\\n    background-color:dodgerblue;\\n    color:white;\\n    padding:5%;\\n    display:block;\\n    width:100%;\\n    font-size:1.2em;\\n    text-align:center;\\n    font-family:sans-serif;\\n}\\n\\n.name:hover{\\n    text-decoration: underline;\\n    color:dodgerblue;\\n    cursor: pointer;\\n}\\n\\n.addlist{\\n    font-size:1.8em;\\n    margin-left:45%;\\n    margin-top:2%\\n}\\n\\n.addlist:hover{\\n    color:green;\\n    cursor: pointer;\\n}\\n\\n.tasks{\\n    text-transform:capitalize;\\n    font-family:sans-serif;\\n    font-size:1.3em;\\n}\\n\\n.trash1{\\n    float:right;\\n    margin-top:1%;\\n}\\n\\n.trash1:hover{\\n    cursor: pointer;\\n    color:red;\\n}\\n\\n.taskmenu{\\n    margin-top:3%;\\n\\n}\\n\\n.textfield{\\n    width:90%;\\n    display:inline-block;\\n    border-top:0;\\n    border-left:0;\\n    border-right:0;\\n    border-bottom:5%;\\n    border-color:dodgerblue;\\n}\\n\\n.sqr{\\n    font-size:1.8em;\\n    margin-left:1%;\\n}\\n\\n.sqr:hover{\\ncolor:green;\\ncursor:pointer;\\n}\\n\\n.listname{\\n    font-size:1.5em;\\n    text-transform:uppercase;\\n    color:dodgerblue;\\n    background:#f5f5f5;\\n    text-align:center;\\n    margin-top:2%;\\n    font-family:Arial, Helvetica, sans-serif;\\n}\\n\\n.trash2{\\n    float: right;\\n    font-size:1.1em;\\n    color:whitesmoke;\\n}\\n\\n.trash2:hover{\\n    color:red;\\n    cursor: pointer;\\n}\\n\\n.tasklist{\\n    margin-top:2%;\\n    height:82vh;\\n    overflow:auto;\\n}\\n\\n.taskName{\\n    background-color:dodgerblue;\\n    color:whitesmoke;\\n    padding:2%;\\n    font-size:1.2em;\\n    font-family:sans-serif;\\n    text-transform: capitalize;\\n    margin:0.5% 4%;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n\\n  <div id=\\\"myModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n           <h4 class=\\\"modal-title\\\">Add A New List</h4>\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n           &times;\\n         </button>\\n        </div>\\n\\n        <div class=\\\"modal-body\\\">\\n          <form class=\\\"form-group\\\">\\n          <label for=\\\"input\\\">Name:</label>\\n          <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n          <br>\\n      \\n          <label for=\\\"input\\\">Description:</label>\\n          <input [(ngModel)]=\\\"description\\\" name=\\\"description\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n       </form>\\n        </div>\\n\\n\\n        <div class=\\\"modal-footer\\\">\\n          <button (click)=addnewList() class=\\\"btn btn-success text-white\\\" data-dismiss=\\\"modal\\\">Add</button>\\n          <button  class=\\\"btn btn-danger text-white\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n\\n    <!--SideBar-->\\n    <div class=\\\"col-md-3 aside\\\">\\n     <span class=\\\"user\\\">\\n       <i class=\\\"fa fa-user\\\"></i>{{friendName}}\\n     </span>\\n     <div>\\n        <i  class=\\\"fa fa-plus-square addlist\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"></i>\\n    </div>\\n    <hr class=\\\"lead\\\">\\n\\n    <div *ngFor=\\\"let list of allLists\\\">\\n        <div *ngIf=\\\"list.group==false&&list.createdBy==friendId\\\">\\n        <p class=\\\"tasks\\\">\\n            <span class=\\\"name\\\" (click)=selectList(list.name,list.id)>\\n                <i class=\\\"fa fa-list-alt\\\"></i>{{list.name}}\\n            </span>\\n            <i (click)=deleteList(list.id) class=\\\"fa fa-trash-o trash1\\\"></i>\\n        </p>\\n\\n        <small style=\\\"font-weight:bold ;font-style:sans-serif;\\\" class=\\\"text-muted text-sm\\\">- {{list.description}}</small>\\n\\n        <hr class=\\\"lead\\\">\\n        </div>\\n    </div>\\n    </div>\\n   \\n\\n    <!--Task Menu -->\\n    <div class=\\\"col-md-9 taskmenu\\\">\\n      <div class=\\\"input\\\">\\n        <input [(ngModel)]=\\\"taskName\\\" name =\\\"taskName\\\" type=\\\"text\\\" class=\\\"textfield\\\" placeholder=\\\"Enter Task\\\">\\n        <i (click)=createTask() class=\\\"fa fa-plus-square sqr\\\"></i>\\n      </div>\\n      <p class=\\\"listname\\\">{{listName}}</p> \\n      <div class=\\\"tasklist\\\">\\n      <div *ngFor=\\\"let task of tasks\\\">\\n          <p class=\\\"taskName\\\" *ngIf=\\\"task.listid==listId\\\">\\n              <input type=\\\"checkbox\\\"> {{task.taskName}}\\n              <i (click)=deletetask(task.taskid) class=\\\"fa fa-trash-o trash2\\\"></i>\\n          </p>\\n          </div>\\n      </div>\\n    </div>\\n\\n\\n\\n\\n      \\n  \\n  </div>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Cookie } from 'ng2-cookies'\nimport { HttpService } from './../../http.service'\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-friend',\n  templateUrl: './friend.component.html',\n  styleUrls: ['./friend.component.css']\n})\nexport class FriendComponent implements OnInit {\n  public friendId: String;\n  public friendName: String;\n  public allLists;\n  public listName: String;\n  public listId: String;\n  public name: String;\n  public description: String;\n  public tasks;\n  public taskName;\n  constructor(public httpService: HttpService, public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.friendId = Cookie.get(\"friendId\");\n    this.friendName = Cookie.get(\"friendName\");\n    this.getAllTasklist();\n    this.getAlltask();\n  }\n\n  //Getting All Task List:\n\n  public getAllTasklist = () => {\n    this.httpService.getAlltodo().subscribe((response: any) => {\n      this.allLists = response.data;\n      console.log(\"response\", this.allLists)\n    }, (err) => {\n      this.toastr.error(\"Error Occured While Retrieving Lists\")\n    })\n  }\n\n  //Selecting List:\n\n  public selectList = (name, id) => {\n    this.listName = name;\n    this.listId = id;\n  }\n\n  //Adding New List:\n\n  public addnewList = () => {\n    let data = {\n      name: this.name,\n      description: this.description,\n      createdBy: this.friendId\n    }\n    this.httpService.createTodo(data).subscribe((data: any) => {\n      this.toastr.success(data.message)\n      this.getAllTasklist();\n    }, (err) => {\n      this.toastr.error(\"List Not Created\");\n    })\n\n  }\n\n  //Deleting list:\n  public deleteList=(id)=>{\n    this.httpService.removetodolist(id).subscribe((apiResponse:any)=>{\n      this.toastr.success(apiResponse.message);\n      this.getAllTasklist();\n      this.listName=\"\"\n    },err=>{\n      this.toastr.error(\"List Not Deleted\")\n    })\n    this.httpService.deleteMany(id).subscribe((apiResponse:any)=>{\n      this.toastr.success(apiResponse.message)\n      this.getAlltask();\n    },err=>{\n      this.toastr.error(\"Tasks Not Deleted\")\n    })\n  }\n  public getAlltask=()=>{\n    this.httpService.getTasks().subscribe((data:any)=>{\n     this.tasks=data.data;\n     console.log(this.tasks)\n    })  \n  }\npublic createTask=()=>{\n  if(this.listId==\"\"||this.listId==undefined||this.listId==null){\n    this.toastr.warning(\"List Not Selected\")\n  }\n  \n  else if(this.taskName==\"\"||this.taskName==undefined||this.taskName==null){\n    this.toastr.warning(\"Task Is empty\")\n  }\n  else{\n  let data={\n    listid:this.listId,\n    taskName:this.taskName\n\n  }\n  this.httpService.createnewtask(data).subscribe((apiResponse:any)=>{\n    this.toastr.success(apiResponse.message)\n    this.taskName=\"\"\n    this.getAlltask();\n  \n  },err=>{\n    this.toastr.error(\"Unable To Create Task\")\n  })\n}\n}\npublic deletetask=(id)=>{\n  this.httpService.deletesingletask(id).subscribe((apiResponse:any)=>{\n    this.toastr.success(apiResponse.message)\n    this.getAlltask();\n  },(err)=>{\n    this.toastr.error(\"Not Deleted\");\n  })\n\n}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TodohomeComponent } from './todohome/todohome.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MultiUserComponent } from './multi-user/multi-user.component';\nimport { FriendComponent } from './friend/friend.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      { path: 'todomenu', component: TodohomeComponent },\n      { path: 'multi-user', component: MultiUserComponent },\n      { path: 'friend', component: FriendComponent }\n    ]),\n    FormsModule\n  ],\n declarations: [TodohomeComponent, MultiUserComponent, FriendComponent]\n})\nexport class MenuModule { }\n","module.exports = \".aside{\\nbackground: #f5f5f5;\\nheight:100vh;\\noverflow:auto;\\nmargin-top:2%;\\n}\\n.user{\\n    background-color:yellowgreen;\\n    color:white;\\n    padding:5%;\\n    display:block;\\n    width:100%;\\n    font-size:1.3em;\\n    text-align:center;\\n    font-family: sans-serif;\\n}\\n.addicon{\\n    font-size:2em;\\n    margin-left:45%;\\n    margin-top:1%;\\n    margin-bottom:1%\\n}\\n.addicon:hover{\\ncolor:green;\\ncursor: pointer;\\n}\\n.online{\\n    text-align:center;\\n    margin-top:2%;\\n    margin-bottom:2%;\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-size:1.1em;\\n    background-color:grey;\\n    color:white;\\n    padding:1%\\n}\\n.on-users{\\n    font-size:1.1em;\\n}\\n.onicon{\\n    color:green;\\n}\\n.description{\\n    font-size:0.9em;\\n    font-family:sans-serif;\\n}\\n.name{\\n    font-size:1.2em;\\n    font-family: sans-serif;\\n    text-transform:capitalize;\\n}\\n.name:hover{\\ntext-decoration: underline;\\ncolor:yellowgreen;\\ncursor: pointer;\\n\\n}\\n.trash-2{\\n    float:right;\\n}\\n.trash-2:hover{\\n    color:red;\\n}\\n.maintask{\\n    margin-top:2%;\\n}\\n.textfield{\\n    border-top:0;\\n    border-left:0;\\n    border-right:0;\\n    border-radius:3px;\\n    border-color:tomato;\\n}\\n.square2{\\n    font-size:1.8em;\\n    margin-left:1%;\\n}\\n.square2:hover{\\n    color:green;\\n    cursor:pointer;\\n}\\n.listname{\\n    font-size:1.5em;\\n    text-transform:uppercase;\\n    color:yellowgreen;\\n    background:#f5f5f5;\\n    text-align:center;\\n    margin-top:2%;\\n    font-family:Arial, Helvetica, sans-serif;\\n}\\n.tasks{\\n    background-color:yellowgreen;\\n    color:whitesmoke;\\n    padding:2%;\\n    font-size:1.2em;\\n    font-family:sans-serif;\\n    text-transform: capitalize;\\n    margin:0.5% 4%;\\n}\\n.trash2{\\n    float: right;\\n    font-size:1.1em;\\n    color:whitesmoke;\\n}\\n.trash2:hover{\\n    color:red;\\n    cursor: pointer;\\n}\\n.tasklist{\\n    margin-top:2%;\\n    height:82vh;\\n    overflow:auto;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n    <!--Navigation Bar-->\\n\\n    <nav class=\\\"navbar navbar-expand-md bg-dark navbar-dark\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n            WORKFLOW\\n        </a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavbar\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavbar\\\">\\n            <ul class=\\\"navbar-nav\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/todomenu']\\\">Single-User</a>\\n                </li>\\n            </ul>\\n        </div>\\n    </nav>\\n\\n    <!--Add a new Task List-->\\n\\n    <div id=\\\"myModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">Add a New List</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n                        &times;\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <form class=\\\"form-group\\\">\\n                        <label for=\\\"input\\\">\\n                            Name:\\n                        </label>\\n                        <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" type=\\\"text\\\" />\\n                        <label for=\\\"textarea\\\" style=\\\"resize: none; margin-top:2%;\\\">\\n                            Description:\\n                        </label>\\n                        <textarea [(ngModel)]=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" maxlength=\\\"150\\\" placeholder=\\\"Enter Description\\\">\\n                        </textarea>\\n                    </form>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button class=\\\"btn btn-md text-white bg-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"newlist()\\\">Save</button>\\n                    <button class=\\\"btn btn-md text-white bg-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n\\n        <!--Aside-->\\n\\n        <div class=\\\"col-md-3 aside\\\">\\n            <span class=\\\"user\\\">\\n                <i class=\\\"fa fa-users\\\"></i>\\n                Multi-User\\n            </span>\\n            <div>\\n                <i class=\\\"fa fa-plus-square addicon\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"></i>\\n            </div>\\n            <h6 class=\\\"online\\\">Online Users:</h6>\\n            <div class=\\\"on-users\\\" *ngFor=\\\"let user of users\\\">\\n                <p *ngIf=\\\"user.userId!=userId\\\">\\n                    <i class=\\\"fa fa-user onicon\\\"></i> {{user.fullName}}\\n                </p>\\n            </div>\\n            <hr>\\n            <div *ngFor=\\\"let task of taskList\\\">\\n                <div *ngIf=\\\"task.group==true\\\">\\n                    <p (click)=selectList(task.id,task.name) class=\\\"name\\\">\\n                        <span>\\n                            <i class=\\\"fa fa-list-alt\\\"></i>{{task.name}}\\n                        </span>\\n                        <i (click)=deletelist(task.id,task.name) class=\\\"fa fa-trash-o trash-2\\\"></i>\\n                    </p>\\n                    <span class=\\\"description\\\">- {{task.description}}</span>\\n\\n                    <br>\\n                    <small style=\\\"font-weight:bold\\\" class=\\\"text-muted\\\">\\n                        <i class=\\\"fa fa-user\\\"></i> Created By: {{task.createdBy}}</small>\\n                    <hr>\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n        <!-- Main Task Menu -->\\n\\n        <div class=\\\"col-md-9 maintask\\\">\\n            <div class=\\\"input\\\">\\n                <input [(ngModel)]=\\\"taskName\\\" name=\\\"taskName\\\" style=\\\"width:90%; display:inline-block\\\" class=\\\"textfield\\\" type=\\\"text\\\" placeholder=\\\"Enter New Task\\\">\\n                <i (click)=addTask() class=\\\"fa fa-plus-square square2\\\"></i>\\n            </div>\\n            <p class=\\\"listname\\\">{{listName}}</p>\\n            <div class=\\\"tasklist\\\">\\n                <div *ngFor=\\\"let task of alltasks\\\">\\n                    <p class=\\\"tasks\\\" *ngIf=\\\"task.listid==listId\\\">\\n                        <input type=\\\"checkbox\\\"> {{task.taskName}}\\n                        <i (click)=deleteTask(task.taskid) class=\\\"fa fa-trash-o trash2\\\"></i>\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Socket2Service } from './../../socket2.service';\nimport { Cookie } from 'ng2-cookies';\nimport { HttpService } from './../../http.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-multi-user',\n  templateUrl: './multi-user.component.html',\n  styleUrls: ['./multi-user.component.css']\n})\nexport class MultiUserComponent implements OnInit {\n\n  public token: String;\n  public users;\n  public name: String;\n  public description: String;\n  public taskList;\n  public value: Boolean = true;\n  public taskName: String;\n  public alltasks;\n\n  //Cookie\n  public userId: String;\n  public userName: String;\n  public listId: String;\n  public listName: String\n\n\n  constructor(public socketService: Socket2Service, public httpService: HttpService, public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.token = Cookie.get('token')\n    this.userId = Cookie.get(\"id\");\n    this.userName = Cookie.get(\"fullName\");\n  \n    this.verifyUserConfirmation();\n    this.onlineUsers();\n\n    this.getAlltask();\n    this.getAllLists();\n    \n    this.newListResponse();\n    this.addTaskresponse();\n    this.deleteres();\n    this.deletelistres();\n  }\n\n  //User Confirmation:\n\n  public verifyUserConfirmation = () => {\n    this.socketService.verifyUser().subscribe((response) => {\n      this.socketService.setUser(this.token);\n      console.log(\"User Is Verified\");\n\n    })\n  }\n  public onlineUsers = () => {\n    this.socketService.getOnlineUsers().subscribe((response) => {\n      this.users = response\n      console.log(this.users);\n    })\n  }\n\n  //Adding List : \n\n  public newlist = () => {\n    if (this.name == undefined || this.name == \"\")\n      return this.toastr.warning(\"Enter Name\")\n    else {\n      let listData = {\n        name: this.name,\n        description: this.description,\n        createdBy: this.userName,\n        group: this.value\n      }\n      this.socketService.createNewList(listData)\n      \n    }\n\n  }\n  public newListResponse = () => {\n    this.socketService.createlistresponse().subscribe((response) => {\n      this.toastr.success(response);\n      this.getAllLists();\n    })\n  }\n\n  public getAllLists = () => {\n    this.httpService.getAlltodo().subscribe((response: any) => {\n      this.taskList = response.data;\n      console.log(this.taskList)\n    })\n  }\n\n  //Adding Task:\n\n  public selectList = (id, name) => {\n    this.listId = id;\n    this.listName = name;\n    console.log(this.listId, this.listName);\n  }\n  public addTask = () => {\n    if(this.listId==\"\" ||this.listId==undefined||this.listId==null){\n      return this.toastr.warning(\"Select List\")\n    }\n    else{}\n    if(this.taskName==\"\" ||this.taskName==undefined ||this.taskName==null){\n     return this.toastr.warning(\"Enter Task\")\n    }\n    else{\n    let data = {\n      listId: this.listId,\n      taskName: this.taskName\n    }\n    this.socketService.createtask(data)\n  }\n  }\n  public addTaskresponse = () => {\n    this.socketService.taskResponse().subscribe((socketResponse) => {\n      this.toastr.info(socketResponse)\n      this.taskName = \"\"\n      this.getAlltask();\n    })\n  }\n  public getAlltask = () => {\n    this.httpService.getTasks().subscribe((apiResponse: any) => {\n      this.alltasks = apiResponse.data;\n      console.log(this.alltasks)\n    })\n  }\n  //deleting\n  public deleteTask = (id) => {\n    let data = {\n      id: id,\n      name: this.userName\n    }\n    this.socketService.deleteUniqueTask(data)\n    \n  }\n  public deleteres = () => {\n    this.socketService.deleteResponse().subscribe((apiResponse: any) => {\n      this.toastr.success(apiResponse);\n      this.getAlltask();\n    })\n  }\n  public deletelist = (id, name) => {\n    let data = {\n      id: id,\n      name: name\n    }\n    this.socketService.deletethelist(data)\n    this.httpService.deleteMany(id).subscribe((apiResponse: any) => {\n      this.toastr.success(apiResponse.message)\n    }, err => {\n      console.log(err)\n    })\n  }\n  public deletelistres = () => {\n    this.socketService.deletelistRes().subscribe((apiResponse: any) => {\n      this.toastr.success(apiResponse);\n      this.listName=\"\"\n      this.listId=\"\"\n      this.getAllLists();\n      this.getAlltask();\n\n    })\n\n  }\n}\n","module.exports = \".aside{\\n    background:  #f5f5f5;\\n    height:100vh;\\n    overflow:auto;\\n    margin-top:2%;\\n}\\nh5{\\n    text-decoration:underline;\\n    color:#9966ff;\\n    background:#f5f5f5;\\n    padding:1%;\\n}\\n.list{\\n    list-style-type: square;\\n    display:inline-block;\\n    \\n}\\n.user{\\n    background-color:#9966ff;\\n    color:white;\\n    padding:5%;\\n    display:block;\\n    width:100%;\\n    font-size:1.2em;\\n    text-align:center;\\n    font-family:sans-serif;\\n}\\n.all{\\n    font-size:1.3em;\\n    margin:3vh 0;\\n}\\n.tasks{\\n    text-transform:capitalize;\\n    font-family:sans-serif;\\n    font-size:1.3em;\\n}\\n.tasks:hover{\\n    cursor:pointer;\\n    text-decoration:underline;\\n}\\n.fasquare{\\n    text-align: center;\\n    font-size:2.2em;\\n    margin-left:43%;\\n    margin-top:3%;\\n}\\n.fasquare:hover{\\n    color:green;\\n    cursor:pointer;\\n}\\n.fa-user{\\n    margin-right:1%;\\n    font-size:1.4em;\\n}\\n.trash1{\\n    color: #9966ff;;\\n    float:right;\\n    margin-top:1%;\\n    font-size:1.2em;\\n}\\n.fa-trash-o:hover{\\n    cursor:pointer;\\n    color:red;\\n}\\n.input{\\n    margin-top:3%;\\n}\\n.textfield{\\n    border-top:none;\\n    border-left:none;\\n    border-right:none;\\n    border-bottom:3px solid #9966ff;\\n}\\n.square2{\\n    font-size:2em;\\n    margin-left:1%;\\n}\\n.square2:hover{\\ncolor:green;\\ncursor:pointer;\\n}\\n.tasklist{\\n    margin-top:2%;\\n    overflow:auto;\\n    height:82vh;\\n}\\n.listname{\\n    font-size:1.5em;\\n    text-transform:uppercase;\\n    color:#9966ff;\\n    background:#f5f5f5;\\n    text-align:center;\\n    margin-top:2%;\\n    font-family:Arial, Helvetica, sans-serif;\\n}\\n.taskName{\\n    background-color:#9966ff;\\n    color:white;\\n    padding:2%;\\n    font-size:1.2em;\\n    font-family:sans-serif;\\n    text-transform: capitalize;\\n    margin:0.5% 4%;\\n}\\n.trash2{\\n    float: right;\\n    font-size:1.1em;\\n    color:whitesmoke;\\n}\\n.trash2:hover{\\n    color:red;\\n}\\n\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n    <!--Navigation Bar-->\\n\\n    <nav class=\\\"navbar navbar-expand-md bg-dark navbar-dark\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n            WORKFLOW\\n        </a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavbar\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavbar\\\">\\n            <ul class=\\\"navbar-nav\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" data-toggle=\\\"modal\\\" data-target=\\\"#socialModal\\\">Social Menu</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/multi-user']\\\">Multi-User</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\"(click)=logout()>Logout</a>\\n                </li>\\n            </ul>\\n        </div>\\n    </nav>\\n\\n    <!--Social Modal-->\\n\\n    <div id=\\\"socialModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">Social Menu</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n                        &times;\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"container-fluid\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-12\\\">\\n                                <h5>All Users:</h5>\\n                                <div *ngFor=\\\"let user of users\\\">\\n                                    <p *ngIf=\\\"userId!=user.userId\\\">\\n                                        <li class=\\\"list\\\">{{user.firstName}} {{user.lastName}}</li>\\n                                        <button style=\\\"margin-left:1%;\\\" class=\\\"btn bg-light\\\" (click)=sendreq(user.userId)>Request</button>\\n                                    </p>\\n                                </div>\\n                                <h5>Requests:</h5>\\n                                <div *ngFor=\\\"let user of users\\\">\\n                                    <div *ngFor=\\\"let req of user.requests\\\">\\n                                        <p *ngIf=\\\"userId==req.receiverId\\\">\\n                                            <li class=\\\"list\\\">{{req.senderName}}</li>\\n                                            <button style=\\\"margin:0 1%;\\\" class=\\\"btn btn-danger\\\" (click)=acceptreq(req.senderId,req.senderName)>Accept</button>\\n                                            <button class=\\\"btn btn-success\\\" (click)=rejectreq(req.senderId)>Reject</button>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <h5>Friends:</h5>\\n                                <div *ngFor=\\\"let user of users\\\">\\n                                    <div *ngIf=\\\"userId==user.userId\\\">\\n                                        <p *ngFor=\\\"let frnd of user.friends\\\">\\n                                            <li class=\\\"list\\\" style=\\\"font-size:1.1em\\\"> {{frnd.friendName}}\\n                                                <button (click)=friendView(frnd.friendName,frnd.friendId) data-dismiss=\\\"modal\\\" [routerLink]=\\\"['/friend']\\\" class=\\\"btn btn-success btn-sm\\\">View</button>\\n                                            </li>\\n                                            <i (click)=deletefriend(frnd.friendId) style=\\\"margin-left:2%\\\"\\n                                                class=\\\"fa fa-trash-o\\\"></i>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!--Modal to add Task List-->\\n\\n    <div id=\\\"myModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">Add a New List</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n                        &times;\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <form class=\\\"form-group\\\">\\n                        <label for=\\\"input\\\">\\n                            Name:\\n                        </label>\\n                        <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" type=\\\"text\\\" />\\n                        <label for=\\\"textarea\\\" style=\\\"resize: none; margin-top:2%;\\\">\\n                            Description:\\n                        </label>\\n                        <textarea [(ngModel)]=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" maxlength=\\\"150\\\" placeholder=\\\"Enter Description\\\">\\n\\n                                </textarea>\\n                    </form>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button class=\\\"btn btn-md text-white bg-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"newtodo()\\\">Save</button>\\n                    <button class=\\\"btn btn-md text-white bg-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!--  SideBar   -->\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3 aside\\\">\\n            <span class=\\\"user\\\">\\n                <i class=\\\"fa fa-user\\\"></i>Welcome! {{username}}</span>\\n            <div>\\n                <i class=\\\"fa fa-plus-square fasquare\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"></i>\\n            </div>\\n            <hr class=\\\"lead\\\">\\n            <div *ngFor=\\\"let res of response\\\">\\n                <div *ngIf=\\\"res.group==false\\\">\\n                <p class=\\\"tasks\\\">\\n                    <span (click)=selectlist(res.id,res.name)>\\n                        <i class=\\\"fa fa-list-alt\\\"></i>{{res.name}}\\n                    </span>\\n                    <i class=\\\"fa fa-trash-o trash1\\\" (click)=deletetodoList(res.id)></i>\\n                </p>\\n\\n                <small style=\\\"font-weight:bold ;font-style:sans-serif;\\\" class=\\\"text-muted text-sm\\\">- {{res.description}}</small>\\n\\n                <hr class=\\\"lead\\\">\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!--Task Menu -->\\n        <div class=\\\"col-md-9\\\">\\n            <div class=\\\"input\\\">\\n                <input [(ngModel)]=\\\"task\\\" name=\\\"task\\\" style=\\\"width:90%; display:inline-block\\\" class=\\\"textfield\\\" type=\\\"text\\\" placeholder=\\\"Enter New Task\\\">\\n                <i (click)=createtask() class=\\\"fa fa-plus-square square2\\\"></i>\\n            </div>\\n            <div>\\n                <p class=\\\"listname\\\">{{listname}}</p>\\n                <div class=\\\"tasklist\\\">\\n                    <div *ngFor=\\\"let task of taskdata\\\">\\n                        <p class=\\\"taskName\\\" *ngIf=\\\"task.listid==listId\\\">\\n                            <input type=\\\"checkbox\\\"> {{task.taskName}}\\n                            <i (click)=deletetask(task.taskid) class=\\\"fa fa-trash-o trash2\\\"></i>\\n                        </p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../../http.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Cookie } from 'ng2-cookies';\nimport { Router } from '@angular/router';\nimport { SocketService } from './../../socket.service';\n\n\n@Component({\n  selector: 'app-todohome',\n  templateUrl: './todohome.component.html',\n  styleUrls: ['./todohome.component.css']\n})\n\n\nexport class TodohomeComponent implements OnInit {\n  public name: String;\n  public description: String;\n  public createdBy;\n  public response = [];\n  public task;\n  public taskdata;\n  public users;\n\n\n  //Variables Used With Cookies:\n\n  public username: String;\n  public userId: String;\n  public listname: String;\n  public listId: String;\n\n\n\n  constructor(public httpService: HttpService, public socketService: SocketService, public toastr: ToastrService, public router: Router) {\n\n  }\n\n\n  ngOnInit() {\n    this.getAlltodoList();\n    this.username = Cookie.get(\"fullName\");\n    this.userId = Cookie.get(\"id\");\n    this.createdBy = this.userId;\n    this.getAlltasks();\n    this.getAllUsers();\n    this.firstResponse();\n    this.secondResponse();\n    this.rejectRes();\n    this.acceptRes();\n    this.saveRequest();\n    this.deleteresponse()\n  }\n\n  //Navigate To Login:\n\n  public gotologin = () => {\n    this.router.navigate(['/login'])\n  }\n\n  //Adding A New Todo list:\n\n  public newtodo = () => {\n    if (!this.name) {\n      this.toastr.warning(\"Name is required\");\n    }\n    else {\n      let values = {\n        name: this.name,\n        description: this.description,\n        createdBy: this.createdBy\n      }\n      this.httpService.createTodo(values).subscribe((apiResponse: any) => {\n        if (apiResponse.status == 200) {\n          this.toastr.info(\"Task-List Created\");\n          this.name = \"\"\n          this.description = \"\"\n          this.response = [];\n          this.getAlltodoList();\n\n        }\n      }, (error) => {\n        console.log(\"Error Occured\")\n      })\n    }\n  }\n\n  //Deleting a todolist:\n\n  public deletetodoList = (id) => {\n    this.httpService.removetodolist(id).subscribe((apiResponse: any) => {\n      console.log(apiResponse);\n      Cookie.delete('listid');\n      Cookie.delete('listname');\n      this.listname = \"\";\n      this.toastr.success(apiResponse.message);\n      this.response = [];\n      this.getAlltodoList();\n\n    }, (err) => {\n      this.toastr.error(\"Unable to Delete Blog\")\n    })\n\n    this.httpService.deleteMany(id).subscribe((apiResponse: any) => {\n      this.toastr.success(apiResponse.message);\n      Cookie.delete('listid');\n      Cookie.delete('listname');\n     \n      this.getAlltasks();\n    }, (err) => {\n      this.toastr.error(\"Error Occured\");\n    })\n\n  }\n\n  //Getting Alltodolist:\n\n  public getAlltodoList = () => {\n    console.log(this.response)\n    this.httpService.getAlltodo().subscribe((apiResponse: any) => {\n      for (let index in apiResponse.data) {\n        if (apiResponse.data[index].createdBy == this.userId)\n          this.response.push(apiResponse.data[index])\n        else\n          console.log(\"Does Not Match\");\n      }\n      console.log(this.response);\n    }, (err) => {\n      console.log(\"Error Occured\")\n    })\n  }\n\n  //Selecting A List:\n\n  public selectlist = (listid, listname) => {\n    Cookie.set(\"listid\", listid);\n    Cookie.set(\"listname\", listname);\n    this.listname = Cookie.get(\"listname\");\n    this.listId = Cookie.get(\"listid\");\n    this.toastr.success(this.listname + \" Selected\");\n  }\n\n  //Getting All Tasks:\n\n  public getAlltasks = () => {\n    this.httpService.getTasks().subscribe((apiResponse: any) => {\n\n      this.taskdata = apiResponse.data\n      console.log(this.taskdata);\n    }, (err) => {\n      console.log(err);\n    })\n  }\n\n  //Creating A New Task:\n\n  public createtask = () => {\n    if (this.listId == undefined) {\n      return this.toastr.warning(\"Select Task List\");\n    }\n    else {\n\n    }\n    if (this.task == undefined || this.task == \"\" || this.task == null) {\n      return this.toastr.warning(\"Task Cannot be empty\")\n    }\n    else {\n      let data = {\n        listid: this.listId,\n        taskName: this.task\n      }\n      this.httpService.createnewtask(data).subscribe((apiResponse: any) => {\n        this.task = \"\";\n        this.getAlltasks();\n        this.toastr.success(\"Task Created\");\n      }, (err) => {\n        this.toastr.error(\"Error Occured\");\n      })\n    }\n  }\n\n  //Deleting A Task:\n\n  public deletetask = (id) => {\n    this.httpService.deletesingletask(id).subscribe((apiResponse: any) => {\n      if (apiResponse.status == 200) {\n        this.toastr.success(apiResponse.message)\n        this.getAlltasks();\n      }\n    }, (err) => {\n      console.log(err);\n      this.toastr.error(\"Unable to delete\")\n    })\n  }\n\n  //Getting All Users From Database:\n\n  public getAllUsers = () => {\n    this.httpService.getAllpeople().subscribe((apiResponse: any) => {\n      this.users = apiResponse.data;\n      console.log(this.users);\n    })\n  }\n  //Logout:\n  public logout=()=>{\n    Cookie.delete(\"listid\")\n    Cookie.delete(\"listname\")\n    Cookie.delete('fullName');\n    Cookie.delete('id')\n    Cookie.delete(\"token\");\n    this.gotologin()\n  }\n\n  //Sending The Request:\n\n  public sendreq = (id) => {\n    let data = {\n      receiverId: id,\n      senderId: this.userId,\n      senderName: this.username\n    }\n    this.socketService.sendrequest(data)\n  }\n\n  //Rejecting The Request:\n\n  public rejectreq = (id) => {\n    let data = {\n      receiverId: this.userId,\n      senderId: id,\n    }\n    this.socketService.rejectrequest(data)\n  }\n\n  //Accepting The Request:\n\n  public acceptreq = (id, name) => {\n    let data = {\n      senderId: id,\n      receiverId: this.userId,\n      receiverName: this.username,\n      senderName: name\n    }\n    this.socketService.acceptrequest(data);\n  }\n  \n  //Deleting A Friend:\n\n  public deletefriend=(id)=>{\n    let data={\n      friendId:id,\n      myId:this.userId\n    }\n    this.socketService.unfriend(data)\n  }\n\n  //Viewing Friend:\n  public friendView=(name,id)=>{\n    Cookie.set(\"friendId\",id);\n    Cookie.set(\"friendName\",name);\n  }\n\n  //Response of Friend Requests:\n\n  public firstResponse = () => {\n    this.socketService.responseFirst().subscribe((apiResponse) => {\n      this.toastr.error(apiResponse)\n    })\n  }\n\n  public secondResponse = () => {\n    this.socketService.responseSecond().subscribe((apiResponse) => {\n      this.toastr.error(apiResponse)\n    })\n  }\n\n  public rejectRes = () => {\n    this.socketService.rejectresponse().subscribe((apiResponse) => {\n      this.toastr.warning(\"Request Rejected\");\n      this.getAllUsers();\n    })\n  }\n\n  public acceptRes = () => {\n    this.socketService.acceptresponse().subscribe((apiResponse) => {\n      this.toastr.success(apiResponse);\n      this.getAllUsers();\n    })\n  }\n\n  public saveRequest = () => {\n    this.socketService.savereq().subscribe((apiResponse) => {\n      this.toastr.success(apiResponse);\n    })\n  }\n  public deleteresponse=()=>{\n    this.socketService.unfrndResponse().subscribe((apiResponse)=>{\n      this.toastr.success(apiResponse)\n      this.getAllUsers();\n    })\n  }\n\n}","import { Injectable } from '@angular/core';\nimport * as  io from 'socket.io-client'\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  public baseUrl = \"http://backend.solitarydev.online\";\n  //Handshake\n  public socket = io(this.baseUrl)\n\n  constructor() {}\n   \n//Sending Request:\n\npublic sendrequest=(data)=>{\n  this.socket.emit(\"request\",data);\n}\npublic responseFirst=()=>{\n  return Observable.create((observer)=>{\n    this.socket.on(\"responseA\",(data)=>{\n      observer.next(data);\n    })\n  })\n}\npublic responseSecond=()=>{\n  return Observable.create((observer)=>{\n    this.socket.on(\"responseB\",(data)=>{\n      observer.next(data);\n    })\n  })\n}\npublic savereq=()=>{\n  return Observable.create((observer)=>{\n    this.socket.on(\"savereq\",(data)=>{\n      observer.next(data);\n    })\n  })\n}\npublic rejectresponse=()=>{\n  return Observable.create((observer)=>{\n    this.socket.on(\"rejecting\",(data)=>{\n      observer.next(data);\n    })\n  })\n}\npublic acceptresponse=()=>{\n  return Observable.create((observer)=>{\n    this.socket.on(\"accepting\",(data)=>{\n      observer.next(data)\n    })\n  })\n  }\n  \n//Rejecting Request:\n\npublic rejectrequest=(data)=>{\n  this.socket.emit(\"reject\",data);\n}\n\n//Accepting Request:\n\npublic acceptrequest=(data)=>{\n  this.socket.emit(\"accept\",data);\n}\n\n//Removing Friend:\npublic unfriend=(data)=>{\n  this.socket.emit(\"unfriend\",data);\n}\npublic unfrndResponse=()=>{\n  return Observable.create((observer)=>{\n    this.socket.on(\"removed\",(data)=>{\n      observer.next(data);\n    })\n  })\n}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Socket2Service {\n  public baseurl = \"http://backend.solitarydev.online\"\n  public socket;\n\n  constructor() {\n    this.socket = io(this.baseurl)\n  }\n\n  //Authentication Section:\n\n  public verifyUser = () => {\n    return Observable.create((observer) => {\n      this.socket.on(\"verify-user\", (socketData) => {\n        observer.next(socketData)\n      })\n    })\n  }\n  public setUser = (token) => {\n    this.socket.emit(\"set-user\", token)\n  }\n  public getOnlineUsers = () => {\n    return Observable.create((observer) => {\n      this.socket.on(\"onlineUsers\", (socketData) => {\n        observer.next(socketData);\n      })\n    })\n  }\n\n  //Creating A New List:\n\n  public createNewList = (listData) => {\n    this.socket.emit(\"createList\", listData)\n  }\n  public createlistresponse = () => {\n    return Observable.create((observer) => {\n      this.socket.on(\"createList-res\", (data) => {\n        observer.next(data);\n      })\n    })\n  }\n\n  //Creating A New Task:\n\n  public createtask = (data) => {\n    this.socket.emit(\"createtask\", data);\n  }\n  public taskResponse = () => {\n    return Observable.create((observer) => {\n      this.socket.on(\"createtask-res\", (data) => {\n        observer.next(data);\n      })\n    })\n  }\n\n  //Deleting A Task:\n\n  public deleteUniqueTask = (data) => {\n    this.socket.emit('deleteTask', data);\n  }\n  public deleteResponse = () => {\n    return Observable.create((observer) => {\n      this.socket.on('deleteResponse', (data) => {\n        observer.next(data);\n      })\n    })\n  }\n\n  // Deleting A List\n  public deletethelist = (data) => {\n    this.socket.emit(\"deletelist\", data)\n  }\n  public deletelistRes = () => {\n    return Observable.create((observer) => {\n      this.socket.on('deletelistres', (data) => {\n        observer.next(data)\n      })\n    })\n  }\n}\n","module.exports = \".header{\\n    background-color:chocolate;\\n    font-size:1.5em;\\n    font-family:Arial, Helvetica, sans-serif;\\n    text-align: center;\\n    color:white;\\n    padding:6vh;\\n    margin-bottom:5vh;\\n    }\\n    #button{\\n        margin:0 1%;\\n    }\\n    .back{\\n        font-size:1.2em;\\n        font-weight:bold;\\n    }\\n    .field{\\n        margin-top:5vh;\\n    }\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-12 header\\\">\\n          WorkFlow:To Do List\\n      </div>\\n      <div class=\\\"col-12\\\">\\n        <span class=\\\"back\\\">Go Back =></span>\\n        <button [routerLink]=\\\"['/signup']\\\" id=\\\"button\\\" class=\\\"btn bg-light\\\">Sign-Up</button>\\n        <button  [routerLink]=\\\"['/login']\\\"  class=\\\"btn bg-light \\\">Login</button>\\n      </div>\\n\\n\\n      <div class=\\\"col-12 field\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">\\n              Enter Your Unique UserID:\\n            </label>\\n            <input type =\\\"text\\\" [(ngModel)]=\\\"userID\\\"  name = \\\"userID\\\" class=\\\"form-control\\\" placeholder=\\\"Your UserID\\\">\\n          </div>\\n          <button class=\\\"btn bg-light\\\" (click)=deleteAccount()>Delete Account</button>\\n        </form>\\n      </div>\\n  </div>\\n\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from './../../app.service'\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-delete-account',\n  templateUrl: './delete-account.component.html',\n  styleUrls: ['./delete-account.component.css']\n})\n\nexport class DeleteAccountComponent implements OnInit {\n  public userID: String;\n  constructor(public toastr: ToastrService, public appService: AppService, public router: Router) { }\n\n  ngOnInit() { }\n\n  public gotoLogin = () => {\n    this.router.navigate([\"/login\"])\n  }\n  \n  public deleteAccount = () => {\n    if (!this.userID) {\n      this.toastr.warning(\"Enter UserID\");\n    }\n    else {\n      this.appService.removeAccount(this.userID).subscribe((apiResponse: any) => {\n        if (apiResponse.status == 200) {\n          this.toastr.success(apiResponse.message);\n          setTimeout(() => {\n            this.gotoLogin();\n          }, 2000)\n        }\n        else {\n          this.toastr.error(apiResponse.message);\n        }\n      }, (err) => {\n        this.toastr.error(\" Connection Error Took Place\");\n      });\n    }\n  }\n}\n\n","module.exports = \".header{\\n    background-color:black;\\n    font-size:1.5em;\\n    font-family:Arial, Helvetica, sans-serif;\\n    text-align: center;\\n    color:white;\\n    padding:6vh;\\n    margin-bottom:5vh;\\n    }\\n    #button{\\n        margin:0 1%;\\n    }\\n    .back{\\n        font-size:1.2em;\\n        font-weight:bold;\\n    }\\n    .field{\\n        margin-top:5vh;\\n    }\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12 header\\\">\\n            WorkFlow:To Do List\\n        </div>\\n        <div class=\\\"col-12\\\">\\n          <span class=\\\"back\\\">Go Back =></span>\\n          <button [routerLink]=\\\"['/signup']\\\" id=\\\"button\\\" class=\\\"btn bg-dark text-white\\\">Sign-Up</button>\\n          <button  [routerLink]=\\\"['/login']\\\"  class=\\\"btn bg-dark text-white\\\">Login</button>\\n        </div>\\n\\n\\n        <div class=\\\"col-12 field\\\">\\n          <form>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">\\n                Enter You Email Address To Recover Password:\\n              </label>\\n              <input type =\\\"email\\\" [(ngModel)]=\\\"email\\\"  name = \\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\">\\n            </div>\\n            <button class=\\\"btn bg-dark text-white\\\"(click)=forgotPassword()>Recover</button>\\n          </form>\\n        </div>\\n    </div>\\n\\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from './../../app.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public email: any;\n\n  constructor(public toastr: ToastrService, public appService: AppService) { }\n  ngOnInit() { }\n\n  public forgotPassword = () => {\n    if (!this.email) {\n      this.toastr.warning(\"Email Is Mandatory\");\n    }\n    else {\n      this.appService.forgotPassword(this.email).subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.toastr.success(apiResponse.message);\n        }\n        else {\n          this.toastr.error(apiResponse.message);\n        }\n      }, (err) => {\n        this.toastr.error(\" Connection Error Took Place\");\n      });\n    }\n  }\n}\n","module.exports = \".header{\\nbackground-color:#0f7a1c;\\nfont-size:1.5em;\\nfont-family:Arial, Helvetica, sans-serif;\\ntext-align: center;\\ncolor:white;\\npadding:6vh;\\nmargin-bottom:3vh;\\n}\\n\\n.heading{\\n    color:#0f7a1c;\\n    text-decoration: underline;\\n}\\n\\n.para{\\n    color:#0f7a1c;\\n    font-size: 1.1em;\\n}\\n\\n.para2{\\n    display: inline-block;\\n    color:#0f7a1c;\\n    font-size: 1.1em;\\n    margin:1%;\\n    font-weight:bold;\\n    background-color:gainsboro;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12 header\\\">\\n            WorkFlow:To Do List\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-12 login\\\">\\n            <h3 class=\\\"heading\\\">Login-Here:</h3>\\n            <p class=\\\"para2\\\">Need An Account?</p>\\n            <a [routerLink]=\\\"['/signup']\\\">Sign-Up!</a>\\n            <p class=\\\"para\\\">Email:</p>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">\\n                        <i class=\\\"fa fa-user-o\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" aria-label=\\\"Default\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n            </div>\\n            <p class=\\\"para\\\">Password:</p>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">\\n                        <i class=\\\"fa fa-key\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"textPassword\\\" name=\\\"textPassword\\\" aria-label=\\\"Default\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n            </div>\\n            <button class=\\\"btn bg-success text-white\\\" (click)=login()>Log-In</button>\\n            <br>\\n            <a [routerLink]=\\\"['/forgot']\\\" style=\\\"font-weight: bold\\\">Forgot Password?</a>\\n            <br>\\n            <a [routerLink]=\\\"['/delete']\\\" style=\\\"font-weight:bold\\\">Delete Account?</a>\\n        </div>\\n\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { AppService } from './../../app.service';\nimport { Cookie } from 'ng2-cookies';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public email: String;\n  public textPassword: String;\n\n  constructor(public toastr: ToastrService, public router: Router, public appService: AppService) { }\n  ngOnInit() { }\n  public movetoMenu = () => {\n    this.router.navigate(['/todomenu']);\n  }\n\n  public login = () => {\n    if (!this.email) {\n      this.toastr.warning(\"Enter Your Email\");\n    }\n    else if (!this.textPassword) {\n      this.toastr.warning(\"Enter Your Password\");\n    }\n    else {\n      let data = {\n        email: this.email,\n        textPassword: this.textPassword\n      }\n      this.appService.loginFunction(data).subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          Cookie.set('id', apiResponse.data.userId);\n          Cookie.set('fullName', apiResponse.data.userDetails.firstName + \" \" + apiResponse.data.userDetails.lastName);\n          Cookie.set('token',apiResponse.data.token)\n          this.toastr.success(\"Login Successfull\");\n          setTimeout(() => {\n            this.movetoMenu();\n          }, 2000)\n        }\n\n      }, (err) => {\n        if (err.error.message) {\n          this.toastr.error(err.error.message);\n        }\n        else {\n          this.toastr.error(\"Connection Error\")\n        }\n      })\n    }\n  }\n}\n","module.exports = \".header{\\n    background-color:#429bf4;\\n    font-size:1.5em;\\n    font-family:Arial, Helvetica, sans-serif;\\n    text-align: center;\\n    color:white;\\n    padding:6vh;\\n    }\\n\\n.back{\\n    margin:4vh;\\n    font-family:Arial, Helvetica, sans-serif;\\n}\\n\\nlabel{\\n    font-weight:bold;\\n    color:#429bf4;\\n    font-size: 1.1em;\\n    font-family: Arial, Helvetica, sans-serif;\\n    \\n}\\n\\n.field{\\n    margin-bottom:5vh;\\n}\\n\\n.select{\\n    width:150px;\\n    margin-bottom:2%;\\n    font-size:12px;\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-weight:Bold;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      \\n        <div class=\\\"col-12 header\\\">\\n            WorkFlow:To Do List\\n        </div>\\n    </div>\\n    <div class =\\\"row\\\">\\n      <div class=\\\"col-12 back\\\">\\n        <span style=\\\"padding-right:1%;font-size:1.1em ;color:#429bf4;font-weight:bold;\\\">Already Have An Account?</span>\\n        <button class = \\\"btn bg-primary text-white btn-md\\\" [routerLink]=\\\"['/login']\\\">\\n         Login\\n        </button>\\n      </div>\\n      <div class=\\\"col-12 field\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email:</label>\\n            <input type =\\\"email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Your Email\\\" required>\\n            <small id =\\\"help\\\" class=\\\"form-text text-muted\\\">We Will Never Share Your Email</small>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for = \\\"password\\\">Password:</label>\\n            <input type =\\\"password\\\" [(ngModel)]='textPassword' name =\\\"textPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Your Password\\\" required/>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for =\\\"firstName\\\">First Name:</label>\\n            <input type =\\\"text\\\" [(ngModel)]=\\\"firstName\\\" name = \\\"firstName\\\" class=\\\"form-control\\\" placeholder=\\\"Enter First-Name\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for =\\\"lastName\\\">Last Name:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lastName\\\" name=\\\"lastName\\\" placeholder=\\\"Enter Your Last-Name\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n                                       \\n            <label for =\\\"mobileNumber\\\">Phone:</label>\\n            <br>\\n            <select class=\\\"select\\\"[(ngModel)]=\\\"countryCode\\\" name = \\\"countryCode\\\">\\n                <option *ngFor =\\\"let y of codes\\\">\\n                  {{y.name}} ({{y.code}})\\n                </option>\\n                </select>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"mobileNumber\\\" name =\\\"mobileNumber\\\" placeholder=\\\"Enter Mobile Number\\\" required>\\n          </div>\\n         \\n        </form>\\n        <button class='btn bg-primary text-white' (click)=signup()>Sign-Up</button>\\n      </div>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from './../../app.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Headers } from '@angular/http';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  public email: String;\n  public textPassword: any;\n  public firstName: String;\n  public lastName: String;\n  public mobileNumber: String;\n  public countryCode: String;\n  public codes = [];\n\n\n  constructor(public toastr: ToastrService, public appService: AppService, public router: Router, public http: HttpClient) { }\n  ngOnInit() {\n    this.getCode()\n  }\n\n  public gotoLogin = () => {\n    this.router.navigate(['/login']);\n  }\n\n  public signup = () => {\n    if (!this.email) {\n      this.toastr.warning(\"Enter Your Email\");\n    }\n    else if (!this.textPassword) {\n      this.toastr.warning(\"Enter Your Password\");\n    }\n    else if (!this.firstName) {\n      this.toastr.warning(\"Enter Your First Name\")\n    }\n    else if (!this.lastName) {\n      this.toastr.warning(\"Enter Your Last Name\")\n    }\n    else if (!this.mobileNumber) {\n      this.toastr.warning(\"Enter Your Mobile Number\");\n    }\n    else {\n      let data = {\n        email: this.email,\n        textPassword: this.textPassword,\n        firstName: this.firstName,\n        lastName: this.lastName,\n        mobileNumber: this.mobileNumber,\n        countryCode: this.countryCode\n      }\n      this.appService.signupFunction(data).subscribe((apiResponse) => {\n        console.log(apiResponse);\n        if(apiResponse.status==200){\n          this.toastr.success(\"Sign-Up Successful\");\n          setTimeout(() => {\n            this.gotoLogin();\n          }, 2000)\n        }\n        else{\n          this.toastr.error(apiResponse.message);\n        }\n\n      }, (err) => {\n        this.toastr.error(\"Error Occured\");\n      })\n    }\n  }\n  public getCode = () => {\n    this.http.get(\"https://api.jsonbin.io/b/5b13cc87c2e3344ccd96cb9b\").subscribe((data: any) => {\n      \n      this.codes = data.countries\n      console.log(this.codes)\n\n    }, (error) => {\n      console.log(\"Error Occured\", error)\n      this.toastr.error(\"Error Occured\")\n    });\n\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport  { CommonModule } from '@angular/common';\nimport  {RouterModule,Routes} from '@angular/router';\nimport {SignUpComponent} from './sign-up/sign-up.component';\nimport {LoginComponent}  from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { DeleteAccountComponent } from './delete-account/delete-account.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([\n      {path:\"signup\",component:SignUpComponent},\n      {path:\"forgot\",component:ForgotPasswordComponent},\n      {path:\"delete\",component:DeleteAccountComponent}\n    ]),\n   \n  ],\n  declarations: [LoginComponent, SignUpComponent, ForgotPasswordComponent, DeleteAccountComponent]\n})\nexport class UserManagementModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}